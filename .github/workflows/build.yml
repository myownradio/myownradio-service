name: Build App Service
on:
  repository_dispatch:
    types:
      - build-app-service
jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_name: ${{ github.event.client_payload.services }}
    outputs:
      patch_expression: services.${{ steps.variables.outputs.service_name }}.image=${{ steps.variables.outputs.image_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Define variables
        id: variables
        shell: bash
        run: |
          STACK_NAME="myownradio"
          SERVICE_NAME=$(echo ${{ matrix.service_name }})

          IMAGE_NAME=$(echo ${STACK_NAME}/${SERVICE_NAME})
          IMAGE_TAG=$(echo ${{ github.event.client_payload.tag }})
          IMAGE_URL=$(echo ${{ secrets.DOCKER_REGISTRY }}/${IMAGE_NAME}):${IMAGE_TAG}

          echo "##[set-output name=service_name;]$(echo ${SERVICE_NAME})"
          echo "##[set-output name=image_name;]$(echo ${IMAGE_NAME})"
          echo "##[set-output name=image_tag;]$(echo ${IMAGE_TAG})"
          echo "##[set-output name=image_url;]$(echo ${IMAGE_URL})"
      - name: Preflight Checks
        shell: bash
        run: '[ -f "app/services/${{ steps.variables.outputs.service_name }}/Dockerfile" ] || (echo "Dockerfile not found" && exit 1)'
      - name: Build myownradio/${{ steps.variables.outputs.image_name }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          repository: ${{ steps.variables.outputs.image_name }}
          path: app
          dockerfile: app/services/${{ steps.variables.outputs.service_name }}/Dockerfile
          tags: ${{ steps.variables.outputs.image_tag }},latest
  sync:
    needs: [main]
    runs-on: ubuntu-latest
    steps:
      - name: Define Patch Expression
        id: patch_expression
        shell: bash
        run: echo $(echo ${{ toJSON(needs) }})
