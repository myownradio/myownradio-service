name: 'Deploy Single Application Service'

on:
  pull_request:
    types:
      - closed

jobs:
  main:
    if: github.event.pull_request.merged == true
     && github.event.pull_request.base.ref == 'master'
     && !startsWith(github.event.pull_request.head.ref, 'all/')
    name: Deploy Single Application Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Define variables
        id: variables
        shell: bash
        # Move here all variables from secrets that aren't secrets.
        run: |
          STACK_NAME="myownradio"

          BRANCH_NAME=${{ github.event.pull_request.head.ref }}
          SERVICE_NAME=$(echo ${BRANCH_NAME%/*})
          BRANCH_SUFFIX_NAME=$(echo ${BRANCH_NAME#*/})

          IMAGE_NAME=$(echo ${STACK_NAME}/${SERVICE_NAME})
          IMAGE_TAG=$(echo ${{ github.sha }})
          IMAGE_URL=$(echo ${{ secrets.DOCKER_REGISTRY }}/${IMAGE_NAME}):${IMAGE_TAG}

          [ -z "$BRANCH_SUFFIX_NAME" ] && echo "Incorrent branch name" && exit 1

          echo "##[set-output name=service_name;]$(echo ${SERVICE_NAME})"
          echo "##[set-output name=image_name;]$(echo ${IMAGE_NAME})"
          echo "##[set-output name=image_tag;]$(echo ${IMAGE_TAG})"
          echo "##[set-output name=image_url;]$(echo ${IMAGE_URL})"
      - name: Preflight Checks
        shell: bash
        run: |
          [ -d "app/services/${{ steps.variables.outputs.service_name }}" ] || \
                (echo "Service ${{ steps.variables.outputs.service_name }} does not exist" && exit 1)

          [ -f "app/services/${{ steps.variables.outputs.service_name }}/Dockerfile" ] || \
                (echo "Dockerfile not found" && exit 1)
      - name: Build myownradio/${{ steps.variables.outputs.image_name }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          repository: ${{ steps.variables.outputs.image_name }}
          path: app
          dockerfile: app/services/${{ steps.variables.outputs.service_name }}/Dockerfile
          tags: ${{ steps.variables.outputs.image_tag }},latest
      - name: Update environment repository
        uses: pldin601/patch-yaml-through-commit@master
        with:
          git_repo_url: https://pldin601:${{ secrets.GIT_PUSH_TOKEN }}@github.com/myownradio/myownradio-env.git
          committer_name: Roman Lakhtadyr
          committer_email: roman.lakhtadyr@gmail.com
          commit_message: Update image for ${{ steps.variables.outputs.service_name }}
          yaml_file: swarm/docker-compose.yml
          patch_expression: services.${{ steps.variables.outputs.service_name }}.image=${{ steps.variables.outputs.image_url }}
