name: 'Deploy'

on:
  push:
    branches: [ master ]

jobs:
  init:
    name: Run linter and tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup
        run: |
          sudo snap install terraform
          make setup-services
      - name: Linter
        run: make run-linter
      - name: Tests
        run: make run-tests

  terraform:
    needs: init
    name: Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
      TF_VAR_cloudflare_token: ${{ secrets.CLOUDFLARE_TOKEN }}
      TF_VAR_insight_token: ${{ secrets.INSIGHT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Terraform Apply
        id: 'terraform'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: 'terraform'

  build-frontend-proxy:
    needs: terraform
    name: Build "frontend-proxy" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: frontend-proxy
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-service
      - name: Push image
        run: make push

  build-radiomanager-frontend:
    needs: terraform
    name: Build "radiomanager-frontend" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: radiomanager-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  build-radiomanager-backend:
    needs: terraform
    name: Build "radiomanager-backend" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: radiomanager-backend
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  build-migration:
    needs: terraform
    name: Build "migration" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: migration
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  build-auth-server:
    needs: terraform
    name: Build "auth-server" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: auth-server
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  build-fileserver-local:
    needs: terraform
    name: Build "fileserver-local" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: fileserver-local
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  build-audio-uploader:
    needs: terraform
    name: Build "audio-uploader" image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SERVICE: audio-uploader
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Authenticate Docker on AWS
        run: aws ecr get-login --no-include-email --region eu-central-1 | sh
      - name: Build image
        run: make build-app
      - name: Push image
        run: make push

  deploy:
    name: Deploy to Production
    needs:
      - terraform
      - build-frontend-proxy
      - build-radiomanager-frontend
      - build-radiomanager-backend
      - build-migration
      - build-auth-server
      - build-fileserver-local
      - build-audio-uploader
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
      TF_VAR_cloudflare_token: ${{ secrets.CLOUDFLARE_TOKEN }}
      TF_VAR_insight_token: ${{ secrets.INSIGHT_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: chrislennon/action-aws-cli@v1.1
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: Gather terraform output
        id: terraform_output
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'output'
          tf_actions_working_dir: 'terraform'
      - name: Parse terraform output
        id: parsed_output
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.terraform_output.outputs.tf_actions_output }}
          ssh_private_key: 'deployer_private_key.value'
          ssh_public_key: 'deployer_public_key.value'
          ip_address: 'mor_master_ip_address.value'
          url: 'url.value'

          # images here
          radiomanager_frontend_image: 'radiomanager-frontend_image_url.value'
          radiomanager_backend_image: 'radiomanager-backend_image_url.value'
          frontend_proxy_image: 'frontend-proxy_image_url.value'
          migration_image: 'migration_image_url.value'
          auth_server_image: 'auth-server_image_url.value'
          fileserver_local_image: 'fileserver-local_image_url.value'
          audio_uploader_image: 'audio-uploader_image_url.value'
          # end of images
      - name: Deploy stack to Production
        uses: pldin601/docker-swarm-deploy-action@master
        with:
          remote_host: ssh://deployer@${{ steps.parsed_output.outputs.ip_address }}
          ssh_private_key: ${{ steps.parsed_output.outputs.ssh_private_key }}
          ssh_public_key: ${{ steps.parsed_output.outputs.ssh_public_key }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          args: stack deploy --with-registry-auth --compose-file myownradio-service/docker-compose.prod.yml mor
        env:
          IMAGE_TAG: ${{ github.sha }}

          # images here
          RADIOMANAGER_FRONTEND_IMAGE_URL: ${{ steps.parsed_output.outputs.radiomanager_frontend_image }}
          RADIOMANAGER_BACKEND_IMAGE_URL: ${{ steps.parsed_output.outputs.radiomanager_backend_image }}
          FRONTEND_PROXY_IMAGE_URL: ${{ steps.parsed_output.outputs.frontend_proxy_image }}
          MIGRATION_IMAGE_URL: ${{ steps.parsed_output.outputs.migration_image }}
          AUTH_SERVER_IMAGE_URL: ${{ steps.parsed_output.outputs.auth_server_image }}
          FILESERVER_LOCAL_IMAGE_URL: ${{ steps.parsed_output.outputs.fileserver_local_image }}
          AUDIO_UPLOADER_IMAGE_URL: ${{ steps.parsed_output.outputs.audio_uploader_image }}
          # end of images
      - name: Add comment to commit
        uses: peter-evans/commit-comment@v1.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Successfully deployed to servers:
            - ${{ steps.parsed_output.outputs.ip_address }}

            URL:
            - ${{ steps.parsed_output.outputs.url }}
