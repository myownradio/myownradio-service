name: 'Check Everything'

on:
  pull_request:
    branches: [ master ]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
      TF_VAR_cloudflare_token: ${{ secrets.CLOUDFLARE_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: 'Terraform: Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Output'
        id: out
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'output'
          tf_actions_working_dir: 'terraform'
      - name: Values
        run: |
          SSH_PRIVATE_KEY=$(echo $TF_OUTPUT | jq -r '.deployer_private_key.value')
          SSH_PUBLIC_KEY=$(echo $TF_OUTPUT | jq -r '.deployer_public_key.value')

          PRODUCTION_IP=$(echo $TF_OUTPUT | jq -r '.mor_master_ip_address.value')

          echo ::add-mask::"${SSH_PRIVATE_KEY}"
          echo ::add-mask::"${SSH_PUBLIC_KEY}"

          echo ::set-env name=SSH_PUBLIC_KEY::"${SSH_PUBLIC_KEY}"
          echo ::set-env name=SSH_PRIVATE_KEY::"${SSH_PRIVATE_KEY}"

          echo ::set-env name=PRODUCTION_IP::"${PRODUCTION_IP}"
        env:
          TF_OUTPUT: ${{ steps.out.outputs.tf_actions_output }}
      - name: Exp
        run: |
          mkdir -p $HOME/.ssh
          echo $SSH_PRIVATE_KEY > $HOME/.ssh/id_rsa
          echo $SSH_PUBLIC_KEY > $HOME/.ssh/id_rsa.pub
          chmod 600 $HOME/.ssh/id_rsa
          chmod 666 $HOME/.ssh/id_rsa.pub
          echo $HOME/.ssh/
          ls -la $HOME/.ssh/
          ssh deployer@$PRODUCTION_IP uptime
#          docker --host ssh://deployer@$PRODUCTION_IP service ls
