name: 'Check Everything'

on:
  pull_request:
    branches: [ master ]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
      TF_VAR_cloudflare_token: ${{ secrets.CLOUDFLARE_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: 'Terraform: Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'terraform'
      - name: 'Terraform: Output'
        id: terraform_output
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.20
          tf_actions_subcommand: 'output'
          tf_actions_working_dir: 'terraform'
      - name: Parse Output
        id: infra
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.terraform_output.outputs.tf_actions_output }}
          ssh_private_key: 'deployer_private_key.value'
          ssh_public_key: 'deployer_public_key.value'
          ip_address: 'mor_master_ip_address.value'
          frontend_image: 'frontend_image_url.value'
      - name: Deploy to Swarm
        uses: pldin601/docker-swarm-deploy-action@master
        with:
          remote_host: ssh://deployer@${{ steps.infra.outputs.ip_address }}
          ssh_private_key: ${{ steps.infra.outputs.ssh_private_key }}
          ssh_public_key: ${{ steps.infra.outputs.ssh_public_key }}
          args: stack deploy --with-registry-auth --compose-file deployment/docker-swarm/production.yml
        env:
          FRONTEND_IMAGE_URL: ${{ steps.infra.outputs.frontend_image }}
          IMAGE_TAG: ${{ github.sha }}
