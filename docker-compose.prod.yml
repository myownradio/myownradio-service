version: "3.5"

services:

  http-to-https:
    image: realkinetic/http-to-https:latest
    ports:
      - 80:80
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback

  frontend-proxy:
    image: ${FRONTEND_PROXY_IMAGE_URL}:${IMAGE_TAG}
    ports:
      - 443:443
    depends_on:
      - frontend
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback

  frontend:
    image: ${FRONTEND_IMAGE_URL}:${IMAGE_TAG}
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback

  auth-server:
    image: ${AUTH_SERVER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      AUTH_SERVER_TOKEN_SECRET: me9IQW0atAzzE5nYKC6EiibAareI0to1
      AUTH_SERVER_DATABASE_URL: postgres://mor:mor@postgres:5432/mor
      AUTH_SERVER_DATABASE_CLIENT: postgresql
      AUTH_SERVER_ACCESS_TOKEN_LIFETIME: 60
      AUTH_SERVER_REFRESH_TOKEN_LIFETIME: 3600
      AUTH_SERVER_ALLOWED_ORIGIN: https://new.myownradio.biz
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure

  # Migration
  migration:
    image: ${MIGRATION_IMAGE_URL}:latest
    environment:
      MIGRATION_DATABASE_URL: postgres://mor:mor@postgres:5432/mor
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      restart_policy:
        condition: on-failure

  # Backing Services
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: mor
      POSTGRES_PASSWORD: mor
      POSTGRES_DB: mor
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    deploy:
      replicas: 1
      update_config:
        order: stop-first

volumes:

  postgres:
    driver: local
