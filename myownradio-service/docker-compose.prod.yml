version: "3.5"

services:
  frontend-proxy:
    image: ${FRONTEND_PROXY_IMAGE_URL}:${IMAGE_TAG}
    depends_on:
      - radiomanager-frontend
      - radiomanager-backend
      - auth-server
      - audio-uploader
      - scheduler
      - audio-player
    environment:
      VIRTUAL_HOST: "new.myownradio.biz"
      LETSENCRYPT_HOST: "new.myownradio.biz"
    networks:
      - default
      - global
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback
  radiomanager-frontend:
    image: ${RADIOMANAGER_FRONTEND_IMAGE_URL}:${IMAGE_TAG}
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback
  radiomanager-backend:
    image: ${RADIOMANAGER_BACKEND_IMAGE_URL}:${IMAGE_TAG}
    depends_on:
      - scheduler
    environment:
      RADIOMANAGER_BACKEND_TOKEN_SECRET: me9IQW0atAzzE5nYKC6EiibAareI0to1
      RADIOMANAGER_BACKEND_METADATA_SECRET: kYzuRIRETBVZnyvDUrMT
      RADIOMANAGER_BACKEND_ALLOWED_ORIGIN: https://new.myownradio.biz
      RADIOMANAGER_BACKEND_DATABASE_URL: postgres://mor:mor@postgres:5432/mor
      RADIOMANAGER_BACKEND_DATABASE_CLIENT: postgresql
      RADIOMANAGER_BACKEND_METADATA_SIGNATURE_TTL: 30000
    deploy:
      replicas: 1
      update_config:
        order: start-first
        failure_action: rollback
  auth-server:
    image: ${AUTH_SERVER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      AUTH_SERVER_TOKEN_SECRET: me9IQW0atAzzE5nYKC6EiibAareI0to1
      AUTH_SERVER_DATABASE_URL: postgres://mor:mor@postgres:5432/mor
      AUTH_SERVER_DATABASE_CLIENT: postgresql
      AUTH_SERVER_ACCESS_TOKEN_LIFETIME: 60
      AUTH_SERVER_REFRESH_TOKEN_LIFETIME: 604800 # one week
      AUTH_SERVER_ALLOWED_ORIGIN: https://new.myownradio.biz
    depends_on:
      - postgres
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  fileserver-local:
    image: ${FILESERVER_LOCAL_IMAGE_URL}:${IMAGE_TAG}
    environment:
      FILESERVER_LOCAL_ROOT_FOLDER: /usr/content
      FILESERVER_LOCAL_TOKEN_SECRET: me9IQW0atAzzE5nYKC6EiibAareI0to1
      PORT: 8080
    volumes:
      - fileserver-local:/usr/content
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  audio-uploader:
    image: ${AUDIO_UPLOADER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      AUDIO_UPLOADER_ROOT_DIR: /usr/content
      AUDIO_UPLOADER_TOKEN_SECRET: me9IQW0atAzzE5nYKC6EiibAareI0to1
      AUDIO_UPLOADER_METADATA_SECRET: kYzuRIRETBVZnyvDUrMT
      AUDIO_UPLOADER_ALLOWED_ORIGIN: https://new.myownradio.biz
      PORT: 8080
    volumes:
      - audio-uploader:/usr/content
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  stream-composer:
    image: ${STREAM_COMPOSER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      - STREAM_COMPOSER_TOKEN_SECRET=me9IQW0atAzzE5nYKC6EiibAareI0to1
      - PORT=8080
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  scheduler:
    image: ${SCHEDULER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      - SCHEDULER_TOKEN_SECRET=me9IQW0atAzzE5nYKC6EiibAareI0to1
      - SCHEDULER_ALLOWED_ORIGIN=https://new.myownradio.biz
      - SCHEDULER_DATABASE_URL=postgres://mor:mor@postgres:5432/mor
      - SCHEDULER_DATABASE_CLIENT=postgresql
      - PORT=8080
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  audio-player:
    image: ${AUDIO_PLAYER_IMAGE_URL}:${IMAGE_TAG}
    environment:
      - AUDIO_PLAYER_TOKEN_SECRET=me9IQW0atAzzE5nYKC6EiibAareI0to1
      - AUDIO_PLAYER_ALLOWED_ORIGIN=https://new.myownradio.biz
      - AUDIO_PLAYER_DATABASE_URL=postgres://mor:mor@postgres:5432/mor
      - AUDIO_PLAYER_DATABASE_CLIENT=postgresql
      - AUDIO_PLAYER_FILE_SERVER_URL=file:///usr/content
      - PORT=8080
    volumes:
      - audio-uploader:/usr/content
    deploy:
      replicas: 1
      update_config:
        order: start-first
      restart_policy:
        condition: on-failure
  # Migration
  migration:
    image: ${MIGRATION_IMAGE_URL}:latest
    command: npx knex migrate:latest
    environment:
      MIGRATION_DATABASE_URL: postgres://mor:mor@postgres:5432/mor
    depends_on:
      - postgres
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      restart_policy:
        condition: on-failure
  # Backing Services
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: mor
      POSTGRES_PASSWORD: mor
      POSTGRES_DB: mor
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    deploy:
      replicas: 1
      update_config:
        order: stop-first

volumes:
  postgres:
    driver: local
  fileserver-local:
    driver: local
  audio-uploader:
    driver: local

networks:
  global:
    external: true
    name: global_default
